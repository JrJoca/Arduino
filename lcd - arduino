#include "LiquidCrystal.h"
LiquidCrystal lcd(13, 12, 5, 4, 3, 2);

#define FLOWSENSORPIN 8

void contador (void);

volatile uint16_t pulses = 0;
volatile uint8_t lastflowpinstate;
volatile uint32_t lastflowratetimer = 0;
volatile float flowrate;

SIGNAL(TIMER0_COMPA_vect) 
{
  uint8_t x = digitalRead(FLOWSENSORPIN);

  if (x == lastflowpinstate) {
    lastflowratetimer++;
    return;
  }

  if (x == HIGH) {
    //low to high transition!
    pulses++;
  }
  lastflowpinstate = x;
  flowrate = 1000.0;
  flowrate /= lastflowratetimer;  // in hertz
  lastflowratetimer = 0;
}

void useInterrupt(boolean v) {
  if (v) {
    OCR0A = 0xAF;
    TIMSK0 |= _BV(OCIE0A);
  } else {
    TIMSK0 &= ~_BV(OCIE0A);
  }
}

void setup()
{
  
  Serial.begin(9600);
  Serial.print("Flow sensor test!");
  lcd.begin(16, 2);

  pinMode(FLOWSENSORPIN, INPUT);
  digitalWrite(FLOWSENSORPIN, HIGH);
  lastflowpinstate = digitalRead(FLOWSENSORPIN);
  useInterrupt(true);
}

void loop()                     
{
   /*Serial.print("Freq: "); Serial.println(flowrate);
  Serial.print("Pulses: "); Serial.println(pulses, DEC);*/

  float liters = pulses;
  liters /= 7.5;
  liters /= 60.0;

  //Serial.print(liters); Serial.println(" Liters"); 
  
  lcd.setCursor(0, 0);
  lcd.print("Vazao:"); lcd.print(liters);
  
  lcd.setCursor(1, 7);
  lcd.print("Atual:");

  delay(100);
}
